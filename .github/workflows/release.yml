on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x
          
      - name: Set VERSION variable from tag
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
        
      - name: Build
        run: dotnet build --configuration Release /p:Version=${VERSION}
        
      - name: Pack
        run: dotnet pack --configuration Release /p:Version=${VERSION} --no-build --output ./output/nupkg
        
      - name: Push
        run: dotnet nuget push ./output/nupkg/NugetPublishAction.nupkg --api-key ${{secrets.NUGET_API_KEY}} --source https://api.nuget.org/v3/index.json --skip-duplicate

      - name: Checkout HomeBrew Repository
        uses: actions/checkout@v4
        with:
          repository: test-alp/homebrew-nuget-publish-action
          ref: main
          token: ${{ secrets.HOMEBREW_GITHUB_TOKEN }}
          path: homebrew-repo
          
      - name: sha256 calculation
        run: |
          sha256=$(sha256sum ./output/nupkg/NugetPublishAction.pkg | awk '{print $1}')
          cd homebrew-repo
          echo $sha256
          sed -i "s/^\(\s*sha256\s*\"\)[^\"]*\"/\1$sha256\"/" nuget-publish-action.rb

      - name: Publish Windows x64
        run: dotnet publish NugetPublishAction.csproj --configuration Release --runtime win-x64 --self-contained true --output ./output/win-x64 /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:DebugType=None
        
      - name: Publish Windows ARM64
        run: dotnet publish NugetPublishAction.csproj --configuration Release --runtime win-arm64 --self-contained true --output ./output/win-arm64 /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:DebugType=None

      - name: Publish Linux x64
        run: dotnet publish NugetPublishAction.csproj --configuration Release --runtime linux-x64 --self-contained true --output ./output/linux-x64 /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:DebugType=None

      - name: Publish Linux arm64
        run: dotnet publish NugetPublishAction.csproj --configuration Release --runtime linux-arm64 --self-contained true --output ./output/linux-arm64 /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:DebugType=None
        
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            https://nuget.org/packages/NugetPublishAction/${{env.VERSION}}
            For macOS release refer https://github.com/test-alp/homebrew-nuget-publish-action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Nuget Tool Package
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/nupkg/NugetPublishAction.${{env.VERSION}}.nupkg
          asset_name: NugetPublishAction.${{env.VERSION}}.nupkg
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload macOS arm64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/mac-arm64/NugetPublishAction
          asset_name: NugetPublishAction.${{env.VERSION}}.macOS-arm64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload macOS x64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/mac-x64/NugetPublishAction
          asset_name: NugetPublishAction.${{env.VERSION}}.macOS-x64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows x64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/win-x64/NugetPublishAction.exe
          asset_name: NugetPublishAction.${{env.VERSION}}.win-x64.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows arm64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/win-arm64/NugetPublishAction.exe
          asset_name: NugetPublishAction.${{env.VERSION}}.win-arm64.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload Linux x64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/linux-x64/NugetPublishAction
          asset_name: NugetPublishAction.${{env.VERSION}}.linux-x64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux arm64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/linux-arm64/NugetPublishAction
          asset_name: NugetPublishAction.${{env.VERSION}}.linux-arm64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
